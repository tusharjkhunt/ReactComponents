{"version":3,"sources":["components/reusable/navbar.jsx","components/reusable/counter.jsx","components/reusable/counters.jsx","App.js","serviceWorker.js","services/fakeGenreService.js","services/fakeMovieService.js","components/reusable/paginate.jsx","components/reusable/listGroup.jsx","components/moviesTable.jsx","components/movies.jsx","index.js"],"names":["Navbar","react_default","a","createElement","className","this","props","totalCount","Component","Counter","styleValue","fontSize","_this2","dynamicBadge","count","value","style","formateCount","onClick","onIncrement","id","margin","onDecrement","onDelete","Counters","_this","onReset","map","eachCount","counter","key","App","state","handleReset","setState","handleDelete","filter","handleIncrement","handleDecrement","handleTotalCount","length","role","navbar","counters","Boolean","window","location","hostname","match","genres","_id","name","movies","title","genre","numberInStock","dailyRentalRate","publishDate","Paginate","_this$props","totalMovies","pageSize","currentPage","onPageChange","totalPages","Math","ceil","pages","_","range","page","ListGroup","currentGenre","onGenreChange","MoviesTable","raiseSort","path","sortColumn","Object","objectSpread","order","onColumnSort","paginatedMovies","onDeleteMovies","m","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.d623fab7.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nclass Navbar extends Component {\r\n  render() {\r\n    return (\r\n      <nav className=\"navbar navbar-light bg-light\">\r\n        <a className=\"navbar-brand\">\r\n          Navbar\r\n          <span className=\"badge badge-secondary m-2\">\r\n            {this.props.totalCount}\r\n          </span>\r\n        </a>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Navbar;\r\n","import React, { Component } from \"react\";\r\nclass Counter extends Component {\r\n  styleValue = {\r\n    fontSize: 18\r\n  };\r\n  render() {\r\n    let dynamicBadge = \"badge m-4 badge-\";\r\n    dynamicBadge += this.props.count.value === 0 ? \"warning\" : \"primary\";\r\n    return (\r\n      <div>\r\n        <span style={this.styleValue} className={dynamicBadge}>\r\n          {this.formateCount()}\r\n        </span>\r\n        <button\r\n          onClick={() => this.props.onIncrement(this.props.count.id)}\r\n          style={{ margin: 5 }}\r\n          className=\"btn btn-outline-success btn-m\"\r\n        >\r\n          Increment\r\n        </button>\r\n        <button\r\n          onClick={() => this.props.onDecrement(this.props.count.id)}\r\n          style={{ margin: 5 }}\r\n          className=\"btn btn-outline-danger btn-m\"\r\n        >\r\n          Decrement\r\n        </button>\r\n        <button\r\n          onClick={() => this.props.onDelete(this.props.count.id)}\r\n          className=\"btn btn-outline-danger btn-m\"\r\n        >\r\n          Delete\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n  formateCount() {\r\n    const { value } = this.props.count;\r\n    return value === 0 ? \"Zero\" : value;\r\n  }\r\n}\r\n\r\nexport default Counter;\r\n","import React, { Component } from \"react\";\r\nimport Counter from \"./counter\";\r\n\r\nclass Counters extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <button onClick={this.props.onReset} className=\"btn btn-primary btn-m\">\r\n          Reset\r\n        </button>\r\n        {this.props.count.map(eachCount => (\r\n          <Counter\r\n            key={eachCount.id}\r\n            count={eachCount}\r\n            onDelete={this.props.onDelete}\r\n            onIncrement={this.props.onIncrement}\r\n            onDecrement={this.props.onDecrement}\r\n          />\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Counters;\r\n","import React, { Component } from \"react\";\r\n//import Movies from \"../src/components/movies\";\r\nimport Navbar from \"./components/reusable/navbar\";\r\nimport Counters from \"./components/reusable/counters\";\r\nimport \"./App.css\";\r\n\r\nclass App extends Component {\r\n  state = {\r\n    count: [\r\n      { id: 1, value: 3 },\r\n      { id: 2, value: 0 },\r\n      { id: 3, value: 0 },\r\n      { id: 4, value: 0 }\r\n    ]\r\n  };\r\n  handleReset = () => {\r\n    const count = this.state.count.map(eachCount => {\r\n      eachCount.value = 0;\r\n      return eachCount;\r\n    });\r\n    this.setState({ count });\r\n  };\r\n  handleDelete = id => {\r\n    const count = this.state.count.filter(eachCount => eachCount.id !== id);\r\n    this.setState({ count });\r\n  };\r\n  handleIncrement = id => {\r\n    const count = this.state.count.map(eachCount => {\r\n      if (eachCount.id === id) eachCount.value++;\r\n      return eachCount;\r\n    });\r\n    this.setState({ count });\r\n  };\r\n  handleDecrement = id => {\r\n    const count = this.state.count.map(eachCount => {\r\n      if ((eachCount.id === id) & (eachCount.value !== 0)) eachCount.value--;\r\n      return eachCount;\r\n    });\r\n    this.setState({ count });\r\n  };\r\n  handleTotalCount = () => {\r\n    return this.state.count.filter(eachCount => eachCount.value !== 0).length;\r\n  };\r\n  render() {\r\n    return (\r\n      <main role=\"main\" className=\"container\">\r\n        <Navbar totalCount={this.handleTotalCount()} />\r\n        <Counters\r\n          count={this.state.count}\r\n          onReset={this.handleReset}\r\n          onDelete={this.handleDelete}\r\n          onIncrement={this.handleIncrement}\r\n          onDecrement={this.handleDecrement}\r\n        />\r\n      </main>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","export const genres = [\r\n  { _id: \"5b21ca3eeb7f6fbccd471818\", name: \"Action\" },\r\n  { _id: \"5b21ca3eeb7f6fbccd471814\", name: \"Comedy\" },\r\n  { _id: \"5b21ca3eeb7f6fbccd471820\", name: \"Thriller\" }\r\n];\r\n\r\nexport function getGenres() {\r\n  return genres.filter(g => g);\r\n}\r\n","import * as genresAPI from \"./fakeGenreService\";\r\n\r\nconst movies = [\r\n  {\r\n    _id: \"5b21ca3eeb7f6fbccd471815\",\r\n    title: \"Terminator\",\r\n    genre: { _id: \"5b21ca3eeb7f6fbccd471818\", name: \"Action\" },\r\n    numberInStock: 6,\r\n    dailyRentalRate: 2.5,\r\n    publishDate: \"2018-01-03T19:04:28.809Z\"\r\n  },\r\n  {\r\n    _id: \"5b21ca3eeb7f6fbccd471816\",\r\n    title: \"Die Hard\",\r\n    genre: { _id: \"5b21ca3eeb7f6fbccd471818\", name: \"Action\" },\r\n    numberInStock: 5,\r\n    dailyRentalRate: 2.5\r\n  },\r\n  {\r\n    _id: \"5b21ca3eeb7f6fbccd471817\",\r\n    title: \"Get Out\",\r\n    genre: { _id: \"5b21ca3eeb7f6fbccd471820\", name: \"Thriller\" },\r\n    numberInStock: 8,\r\n    dailyRentalRate: 3.5\r\n  },\r\n  {\r\n    _id: \"5b21ca3eeb7f6fbccd471819\",\r\n    title: \"Trip to Italy\",\r\n    genre: { _id: \"5b21ca3eeb7f6fbccd471814\", name: \"Comedy\" },\r\n    numberInStock: 7,\r\n    dailyRentalRate: 3.5\r\n  },\r\n  {\r\n    _id: \"5b21ca3eeb7f6fbccd47181a\",\r\n    title: \"Airplane\",\r\n    genre: { _id: \"5b21ca3eeb7f6fbccd471814\", name: \"Comedy\" },\r\n    numberInStock: 7,\r\n    dailyRentalRate: 3.5\r\n  },\r\n  {\r\n    _id: \"5b21ca3eeb7f6fbccd47181b\",\r\n    title: \"Wedding Crashers\",\r\n    genre: { _id: \"5b21ca3eeb7f6fbccd471814\", name: \"Comedy\" },\r\n    numberInStock: 7,\r\n    dailyRentalRate: 3.5\r\n  },\r\n  {\r\n    _id: \"5b21ca3eeb7f6fbccd47181e\",\r\n    title: \"Gone Girl\",\r\n    genre: { _id: \"5b21ca3eeb7f6fbccd471820\", name: \"Thriller\" },\r\n    numberInStock: 7,\r\n    dailyRentalRate: 4.5\r\n  },\r\n  {\r\n    _id: \"5b21ca3eeb7f6fbccd47181f\",\r\n    title: \"The Sixth Sense\",\r\n    genre: { _id: \"5b21ca3eeb7f6fbccd471820\", name: \"Thriller\" },\r\n    numberInStock: 4,\r\n    dailyRentalRate: 3.5\r\n  },\r\n  {\r\n    _id: \"5b21ca3eeb7f6fbccd471821\",\r\n    title: \"The Avengers\",\r\n    genre: { _id: \"5b21ca3eeb7f6fbccd471818\", name: \"Action\" },\r\n    numberInStock: 7,\r\n    dailyRentalRate: 3.5\r\n  }\r\n];\r\n\r\nexport function getMovies() {\r\n  return movies;\r\n}\r\n\r\nexport function getMovie(id) {\r\n  return movies.find(m => m._id === id);\r\n}\r\n\r\nexport function saveMovie(movie) {\r\n  let movieInDb = movies.find(m => m._id === movie._id) || {};\r\n  movieInDb.name = movie.name;\r\n  movieInDb.genre = genresAPI.genres.find(g => g._id === movie.genreId);\r\n  movieInDb.numberInStock = movie.numberInStock;\r\n  movieInDb.dailyRentalRate = movie.dailyRentalRate;\r\n\r\n  if (!movieInDb._id) {\r\n    movieInDb._id = Date.now();\r\n    movies.push(movieInDb);\r\n  }\r\n\r\n  return movieInDb;\r\n}\r\n\r\nexport function deleteMovie(id) {\r\n  let movieInDb = movies.find(m => m._id === id);\r\n  movies.splice(movies.indexOf(movieInDb), 1);\r\n  return movieInDb;\r\n}\r\n","import React, { Component } from \"react\";\r\nimport _ from \"lodash\";\r\nimport PropTypes from \"prop-types\";\r\nclass Paginate extends Component {\r\n  render() {\r\n    const { totalMovies, pageSize, currentPage, onPageChange } = this.props;\r\n    const totalPages = Math.ceil(totalMovies / pageSize);\r\n    if (totalPages === 1) return null;\r\n    const pages = _.range(1, totalPages + 1);\r\n    /*let pages = [];\r\n    let n = 1;\r\n    while (n <= totalPages) {\r\n      pages.push(n);\r\n      n++;\r\n    }*/\r\n\r\n    return (\r\n      <nav>\r\n        <ul className=\"pagination\">\r\n          {pages.map(page => (\r\n            <li\r\n              key={page}\r\n              className={\r\n                page === currentPage ? \"page-item active\" : \"page-item\"\r\n              }\r\n            >\r\n              <a className=\"page-link\" onClick={() => onPageChange(page)}>\r\n                {page}\r\n              </a>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\nPaginate.propTypes = {\r\n  totalMovies: PropTypes.number.isRequired,\r\n  pageSize: PropTypes.number.isRequired,\r\n  currentPage: PropTypes.number.isRequired,\r\n  onPageChange: PropTypes.func.isRequired\r\n};\r\n\r\nexport default Paginate;\r\n","import React from \"react\";\r\nconst ListGroup = props => {\r\n  return (\r\n    <ul className=\"list-group\">\r\n      {props.genres.map(genre => (\r\n        <li\r\n          key={genre._id}\r\n          className={\r\n            genre.name === props.currentGenre\r\n              ? \"list-group-item active\"\r\n              : \"list-group-item\"\r\n          }\r\n          onClick={() => props.onGenreChange(genre)}\r\n        >\r\n          {genre.name}\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default ListGroup;\r\n","import React, { Component } from \"react\";\r\nclass MoviesTable extends Component {\r\n  raiseSort = path => {\r\n    const sortColumn = { ...this.props.sortColumn };\r\n    if (sortColumn.name === path) {\r\n      sortColumn.order = sortColumn.order === \"asc\" ? \"desc\" : \"asc\";\r\n    } else {\r\n      sortColumn.name = path;\r\n      sortColumn.order = \"asc\";\r\n    }\r\n    this.props.onColumnSort(sortColumn);\r\n  };\r\n  render() {\r\n    const { paginatedMovies, onDeleteMovies } = this.props;\r\n    return (\r\n      <table className=\"table\">\r\n        <thead>\r\n          <tr>\r\n            <th onClick={() => this.raiseSort(\"title\")}>Title</th>\r\n            <th onClick={() => this.raiseSort(\"genre\")}>Genre</th>\r\n            <th onClick={() => this.raiseSort(\"numberInStock\")}>Stock</th>\r\n            <th onClick={() => this.raiseSort(\"dailyRentalRate\")}>Rate</th>\r\n            <th />\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {paginatedMovies.map(m => (\r\n            <tr key={m._id}>\r\n              <td>{m.title}</td>\r\n              <td>{m.genre.name}</td>\r\n              <td>{m.numberInStock}</td>\r\n              <td>{m.dailyRentalRate}</td>\r\n              <td>\r\n                <button\r\n                  className=\"btn btn-danger btn-sm\"\r\n                  onClick={() => onDeleteMovies(m)}\r\n                >\r\n                  Delete\r\n                </button>\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MoviesTable;\r\n","import React, { Component } from \"react\";\r\nimport { getMovies } from \"../services/fakeMovieService\";\r\nimport { getGenres } from \"../services/fakeGenreService\";\r\nimport Paginate from \"./reusable/paginate\";\r\nimport ListGroup from \"./reusable/listGroup\";\r\nimport pagination from \"../utils/pagination\";\r\nimport MoviesTable from \"./moviesTable\";\r\nimport _ from \"lodash\";\r\n\r\nclass Movies extends Component {\r\n  state = {\r\n    movies: [],\r\n    pageSize: 4,\r\n    currentPage: 1,\r\n    genres: [],\r\n    currentGenre: \"All Genres\",\r\n    sortColumn: { name: \"title\", order: \"asc\" }\r\n  };\r\n  componentDidMount() {\r\n    const genres = [{ _id: \"\", name: \"All Genres\" }, ...getGenres()];\r\n    this.setState({ movies: getMovies(), genres });\r\n  }\r\n  handleDeleteMovies = movie => {\r\n    const newMovies = this.state.movies.filter(m => m._id !== movie._id);\r\n    this.setState({ movies: newMovies });\r\n  };\r\n  handlePageChange = page => {\r\n    this.setState({ currentPage: page });\r\n  };\r\n  handleGenreChange = genre => {\r\n    this.setState({ currentGenre: genre.name, currentPage: 1 });\r\n  };\r\n  handleSort = sortColumn => {\r\n    this.setState({ sortColumn });\r\n  };\r\n  render() {\r\n    const { movies, pageSize, currentPage, genres, currentGenre } = this.state;\r\n\r\n    if (this.state.movies.length === 0)\r\n      return <p>There is no Movie in the Database.</p>;\r\n\r\n    const filteredMovies =\r\n      currentGenre === \"All Genres\"\r\n        ? movies\r\n        : movies.filter(movie => movie.genre.name === currentGenre);\r\n\r\n    const sortedMovies = _.orderBy(\r\n      filteredMovies,\r\n      [this.state.sortColumn.name],\r\n      [this.state.sortColumn.order]\r\n    );\r\n\r\n    const paginatedMovies = pagination(sortedMovies, currentPage, pageSize);\r\n    return (\r\n      <main role=\"main\" className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"col-3\">\r\n            <ListGroup\r\n              genres={genres}\r\n              onGenreChange={this.handleGenreChange}\r\n              currentGenre={currentGenre}\r\n            />\r\n          </div>\r\n          <div className=\"col\">\r\n            <p>Showing {paginatedMovies.length} Movies from the Database.</p>\r\n            <MoviesTable\r\n              sortColumn={this.state.sortColumn}\r\n              paginatedMovies={paginatedMovies}\r\n              onDeleteMovies={this.handleDeleteMovies}\r\n              onColumnSort={this.handleSort}\r\n            />\r\n            <Paginate\r\n              totalMovies={filteredMovies.length}\r\n              pageSize={pageSize}\r\n              onPageChange={this.handlePageChange}\r\n              currentPage={currentPage}\r\n            />\r\n          </div>\r\n        </div>\r\n      </main>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Movies;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\nimport Movies from \"./components/movies\";\r\n//import THIS_behavior from \"./components/reusable/THIS_behavior\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}